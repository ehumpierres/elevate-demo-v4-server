[
  {
    "question": "What are our top 5 industries by total revenue?",
    "sql": "SELECT\n  INDUSTRY,\n  SUM(AMOUNT) AS total_revenue\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA\nWHERE\n  ACCOUNT_TYPE = 'Income'\nGROUP BY\n  INDUSTRY\nORDER BY\n  total_revenue DESC\nLIMIT 5;"
  },
  {
    "question": "What is the average won deal size for each customer type?",
    "sql": "SELECT\n  CUSTOMER_TYPE,\n  AVG(AMOUNT) AS average_deal_size\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES\nWHERE\n  STATUS = 'Won'\nGROUP BY\n  CUSTOMER_TYPE\nORDER BY\n  average_deal_size DESC;"
  },
  {
    "question": "How many support tickets do we receive by priority level, and what's their average resolution time?",
    "sql": "SELECT\n  PRIORITY,\n  COUNT(*) AS ticket_count,\n  AVG(DATEDIFF('day', CREATED_DATE, UPDATED_DATE)) AS avg_resolution_days\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.SUPPORT_TICKETS\nGROUP BY\n  PRIORITY\nORDER BY\n  CASE\n    WHEN PRIORITY = 'High' THEN 1\n    WHEN PRIORITY = 'Medium' THEN 2\n    WHEN PRIORITY = 'Low' THEN 3\n    ELSE 4\n  END;"
  },
  {
      "question": "Which lead sources generate the most closed-won opportunities and what's their success rate?",
      "sql": "SELECT\n  LEAD_SOURCE,\n  COUNT(*) AS total_opportunities,\n  COUNT(CASE WHEN STATUS = 'Won' THEN 1 END) AS won_opportunities,\n  ROUND(COUNT(CASE WHEN STATUS = 'Won' THEN 1 END) * 100.0 / COUNT(*), 2) AS win_rate\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES\nGROUP BY\n  LEAD_SOURCE\nORDER BY\n  won_opportunities DESC;"
  },
  {
      "question": "What's our quarterly revenue trend over the past three years, including transaction count?",
      "sql": "SELECT\n  DATE_TRUNC('quarter', TRANSACTION_DATE) AS quarter,\n  SUM(AMOUNT) AS quarterly_revenue,\n  COUNT(*) AS transaction_count\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA\nWHERE\n  ACCOUNT_TYPE = 'Income'\n  AND TRANSACTION_DATE >= DATEADD('year', -3, CURRENT_DATE())\nGROUP BY\n  quarter\nORDER BY\n  quarter;"
  },
  {
    "question": "Which customers have the highest number of support tickets, and what's their financial value?",
    "sql": "SELECT\n  s.CUSTOMER_ID,\n  f.CUSTOMER_NAME,\n  f.INDUSTRY,\n  f.CUSTOMER_TYPE,\n  COUNT(s.TICKET_ID) AS ticket_count,\n  SUM(CASE WHEN f.ACCOUNT_TYPE = 'Income' THEN f.AMOUNT ELSE 0 END) AS total_revenue\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.SUPPORT_TICKETS s\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA f ON s.CUSTOMER_ID = f.CUSTOMER_ID\nGROUP BY\n  s.CUSTOMER_ID, f.CUSTOMER_NAME, f.INDUSTRY, f.CUSTOMER_TYPE\nORDER BY\n  ticket_count DESC\nLIMIT 10;"
  },
  {
    "question": "What is the average sales cycle duration (in days) for each industry?",
    "sql": "SELECT\n  INDUSTRY,\n  AVG(DATEDIFF('day', OPEN_DATE, CLOSE_DATE)) AS avg_sales_cycle_days\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES\nWHERE\n  STATUS IN ('Won', 'Lost')\nGROUP BY\n  INDUSTRY\nORDER BY\n  avg_sales_cycle_days DESC;"
  },
  {
    "question": "How does our support ticket response time correlate with customer revenue?",
    "sql": "WITH customer_metrics AS (\n  SELECT\n    t.CUSTOMER_ID,\n    AVG(DATEDIFF('day', t.CREATED_DATE, t.UPDATED_DATE)) AS avg_resolution_days,\n    SUM(CASE WHEN f.ACCOUNT_TYPE = 'Income' THEN f.AMOUNT ELSE 0 END) AS total_revenue\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.SUPPORT_TICKETS t\n  JOIN\n    DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA f ON t.CUSTOMER_ID = f.CUSTOMER_ID\n  GROUP BY\n    t.CUSTOMER_ID\n)\n\nSELECT\n  CASE\n    WHEN avg_resolution_days < 1 THEN 'Same Day'\n    WHEN avg_resolution_days < 3 THEN '1-3 Days'\n    WHEN avg_resolution_days < 7 THEN '3-7 Days'\n    ELSE 'Over 7 Days'\n  END AS resolution_time_bucket,\n  COUNT(*) AS customer_count,\n  AVG(total_revenue) AS avg_revenue_per_customer\nFROM\n  customer_metrics\nGROUP BY\n  resolution_time_bucket\nORDER BY\n  CASE\n    WHEN resolution_time_bucket = 'Same Day' THEN 1\n    WHEN resolution_time_bucket = '1-3 Days' THEN 2\n    WHEN resolution_time_bucket = '3-7 Days' THEN 3\n    ELSE 4\n  END;"
  },
  {
    "question": "What is the customer lifecycle value across different segments, from initial opportunity to recurring transactions, and how do support experiences impact that journey?",
    "sql": "WITH customer_journey AS (\n  SELECT\n    f.CUSTOMER_ID,\n    f.CUSTOMER_NAME,\n    f.INDUSTRY,\n    f.CUSTOMER_TYPE,\n    MIN(o.OPEN_DATE) AS first_opportunity_date,\n    MIN(CASE WHEN o.STATUS = 'Closed Won' THEN o.CLOSE_DATE ELSE NULL END) AS first_win_date,\n    MIN(f.TRANSACTION_DATE) AS first_transaction_date,\n    MAX(f.TRANSACTION_DATE) AS last_transaction_date,\n    DATEDIFF('day', MIN(CASE WHEN o.STATUS = 'Closed Won' THEN o.CLOSE_DATE ELSE NULL END), MAX(f.TRANSACTION_DATE)) AS customer_tenure_days\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA f\n  JOIN\n    DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON f.CUSTOMER_ID = o.CUSTOMER_ID\n  GROUP BY\n    f.CUSTOMER_ID, f.CUSTOMER_NAME, f.INDUSTRY, f.CUSTOMER_TYPE\n),\n\nfinancial_metrics AS (\n  SELECT\n    CUSTOMER_ID,\n    COUNT(*) AS total_transactions,\n    SUM(CASE WHEN ACCOUNT_TYPE = 'Income' THEN AMOUNT ELSE 0 END) AS total_revenue,\n    SUM(CASE WHEN ACCOUNT_TYPE = 'Expense' THEN AMOUNT ELSE 0 END) AS total_expenses,\n    SUM(CASE WHEN ACCOUNT_TYPE = 'Income' THEN AMOUNT ELSE 0 END) - SUM(CASE WHEN ACCOUNT_TYPE = 'Expense' THEN AMOUNT ELSE 0 END) AS net_value,\n    COUNT(DISTINCT DATE_TRUNC('month', TRANSACTION_DATE)) AS active_months\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA\n  GROUP BY\n    CUSTOMER_ID\n),\n\nopportunity_metrics AS (\n  SELECT\n    CUSTOMER_ID,\n    COUNT(*) AS total_opportunities,\n    COUNT(CASE WHEN STATUS = 'Closed Won' THEN 1 END) AS won_opportunities,\n    SUM(CASE WHEN STATUS = 'Closed Won' THEN AMOUNT ELSE 0 END) AS total_opportunity_value,\n    ROUND(COUNT(CASE WHEN STATUS = 'Closed Won' THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0), 2) AS win_rate\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES\n  GROUP BY\n    CUSTOMER_ID\n),\n\nsupport_metrics AS (\n  SELECT\n    CUSTOMER_ID,\n    COUNT(*) AS total_tickets,\n    COUNT(CASE WHEN PRIORITY IN ('High', 'Urgent', 'Critical') THEN 1 END) AS high_priority_tickets,\n    AVG(DATEDIFF('day', CREATED_DATE, UPDATED_DATE)) AS avg_resolution_time,\n    COUNT(CASE WHEN TICKET_STATUS IN ('Resolved', 'Closed') THEN 1 END) * 100.0 / NULLIF(COUNT(*), 0) AS resolution_rate\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.SUPPORT_TICKETS\n  GROUP BY\n    CUSTOMER_ID\n)\n\nSELECT\n  cj.CUSTOMER_ID,\n  cj.CUSTOMER_NAME,\n  cj.INDUSTRY,\n  cj.CUSTOMER_TYPE,\n  cj.first_opportunity_date,\n  cj.first_win_date,\n  cj.first_transaction_date,\n  cj.last_transaction_date,\n  cj.customer_tenure_days,\n  fm.total_transactions,\n  fm.total_revenue,\n  fm.total_expenses,\n  fm.net_value,\n  fm.active_months,\n  ROUND(fm.total_revenue / NULLIF(fm.active_months, 0), 2) AS monthly_revenue,\n  ROUND(fm.net_value / NULLIF(cj.customer_tenure_days, 0) * 30, 2) AS monthly_net_value,\n  om.total_opportunities,\n  om.won_opportunities,\n  om.win_rate,\n  om.total_opportunity_value,\n  sm.total_tickets,\n  sm.high_priority_tickets,\n  sm.avg_resolution_time,\n  sm.resolution_rate,\n  ROUND(fm.total_revenue / NULLIF(sm.total_tickets, 0), 2) AS revenue_per_ticket,\n  CASE\n    WHEN cj.customer_tenure_days > 365 THEN 'Long-term (>1 year)'\n    WHEN cj.customer_tenure_days > 180 THEN 'Medium-term (6-12 months)'\n    ELSE 'Short-term (<6 months)'\n  END AS tenure_segment\nFROM\n  customer_journey cj\nJOIN\n  financial_metrics fm ON cj.CUSTOMER_ID = fm.CUSTOMER_ID\nJOIN\n  opportunity_metrics om ON cj.CUSTOMER_ID = om.CUSTOMER_ID\nLEFT JOIN\n  support_metrics sm ON cj.CUSTOMER_ID = sm.CUSTOMER_ID\nORDER BY\n  monthly_net_value DESC, customer_tenure_days DESC;"
  },
  {
    "question": "How does the frequency and severity of support tickets correlate with customer financial value, and what is the impact on future transactions after ticket resolution?",
    "sql": "WITH customer_financials AS (\n  SELECT\n    CUSTOMER_ID,\n    SUM(CASE WHEN ACCOUNT_TYPE = 'Income' THEN AMOUNT ELSE 0 END) AS total_income,\n    COUNT(DISTINCT CASE WHEN ACCOUNT_TYPE = 'Income' THEN BALANCE_ID END) AS income_transaction_count,\n    AVG(CASE WHEN ACCOUNT_TYPE = 'Income' THEN AMOUNT ELSE NULL END) AS avg_income_value\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA\n  GROUP BY\n    CUSTOMER_ID\n),\n\nticket_metrics AS (\n  SELECT\n    CUSTOMER_ID,\n    COUNT(*) AS total_tickets,\n    SUM(CASE WHEN PRIORITY IN ('High', 'Urgent', 'Critical') THEN 1 ELSE 0 END) AS high_priority_tickets,\n    AVG(DATEDIFF('day', CREATED_DATE, UPDATED_DATE)) AS avg_resolution_time,\n    MAX(UPDATED_DATE) AS last_ticket_date\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.SUPPORT_TICKETS\n  WHERE\n    TICKET_STATUS IN ('Resolved', 'Closed')\n  GROUP BY\n    CUSTOMER_ID\n),\n\npost_ticket_transactions AS (\n  SELECT\n    t.CUSTOMER_ID,\n    COUNT(*) AS post_ticket_transaction_count,\n    SUM(f.AMOUNT) AS post_ticket_revenue,\n    AVG(f.AMOUNT) AS avg_post_ticket_transaction_value\n  FROM\n    ticket_metrics t\n  JOIN\n    DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA f ON t.CUSTOMER_ID = f.CUSTOMER_ID\n  WHERE\n    f.ACCOUNT_TYPE = 'Income'\n    AND f.TRANSACTION_DATE > t.last_ticket_date\n  GROUP BY\n    t.CUSTOMER_ID\n)\n\nSELECT\n  cf.CUSTOMER_ID,\n  f.CUSTOMER_NAME,\n  f.INDUSTRY,\n  f.CUSTOMER_TYPE,\n  cf.total_income,\n  cf.income_transaction_count,\n  cf.avg_income_value,\n  tm.total_tickets,\n  tm.high_priority_tickets,\n  tm.avg_resolution_time,\n  ROUND(tm.total_tickets * 1.0 / cf.income_transaction_count, 4) AS tickets_per_transaction_ratio,\n  pt.post_ticket_transaction_count,\n  pt.post_ticket_revenue,\n  pt.avg_post_ticket_transaction_value,\n  ROUND((pt.avg_post_ticket_transaction_value - cf.avg_income_value) / cf.avg_income_value * 100, 2) AS transaction_value_change_pct\nFROM\n  customer_financials cf\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.FINANCIAL_DATA f ON cf.CUSTOMER_ID = f.CUSTOMER_ID\nJOIN\n  ticket_metrics tm ON cf.CUSTOMER_ID = tm.CUSTOMER_ID\nLEFT JOIN\n  post_ticket_transactions pt ON cf.CUSTOMER_ID = pt.CUSTOMER_ID\nGROUP BY\n  cf.CUSTOMER_ID, f.CUSTOMER_NAME, f.INDUSTRY, f.CUSTOMER_TYPE, cf.total_income, cf.income_transaction_count, cf.avg_income_value, tm.total_tickets, tm.high_priority_tickets, tm.avg_resolution_time, pt.post_ticket_transaction_count, pt.post_ticket_revenue, pt.avg_post_ticket_transaction_value\nORDER BY\n  transaction_value_change_pct DESC;"
  },
  {
      "question": "What is our MQL to SQL conversion rate by customer segment and lead source?",
      "sql": "SELECT \n  o.CUSTOMER_TYPE,\n  l.LEAD_SOURCE,\n  COUNT(*) as total_leads,\n  COUNT(l.MQL_DATE) as mqls,\n  COUNT(l.SQL_DATE) as sqls,\n  ROUND(COUNT(l.SQL_DATE) * 100.0 / COUNT(l.MQL_DATE), 2) as mql_to_sql_pct,\n  ROUND(COUNT(l.MQL_DATE) * 100.0 / COUNT(*), 2) as lead_to_mql_pct\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.LEADS l\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON l.CUSTOMER_ID = o.CUSTOMER_ID\nWHERE\n  l.MQL_DATE IS NOT NULL\nGROUP BY\n  o.CUSTOMER_TYPE, l.LEAD_SOURCE\nORDER BY\n  mql_to_sql_pct DESC;"
  },
  {
      "question": "Which lead sources are performing above or below the mature benchmark of 12% MQL to SQL conversion?",
      "sql": "SELECT \n  LEAD_SOURCE,\n  COUNT(*) as total_mqls,\n  COUNT(SQL_DATE) as sqls,\n  ROUND(COUNT(SQL_DATE) * 100.0 / COUNT(*), 2) as conversion_pct,\n  CASE \n    WHEN COUNT(SQL_DATE) * 100.0 / COUNT(*) >= 12 THEN 'Mature'\n    WHEN COUNT(SQL_DATE) * 100.0 / COUNT(*) >= 8 THEN 'Developing' \n    ELSE 'Immature'\n  END as maturity_status\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.LEADS \nWHERE\n  MQL_DATE IS NOT NULL\nGROUP BY\n  LEAD_SOURCE\nORDER BY\n  conversion_pct DESC;"
  },
  {
      "question": "What is our POC success rate and average duration by customer type and deal size?",
      "sql": "SELECT \n  o.CUSTOMER_TYPE,\n  CASE \n    WHEN o.AMOUNT < 50000 THEN 'Small Deal'\n    WHEN o.AMOUNT < 150000 THEN 'Medium Deal'\n    ELSE 'Large Deal'\n  END as deal_size_band,\n  COUNT(*) as total_pocs,\n  AVG(p.DURATION_DAYS) as avg_poc_days,\n  ROUND(AVG(p.SUCCESS_FLAG) * 100, 2) as poc_success_pct,\n  COUNT(CASE WHEN p.SUCCESS_FLAG = 0 THEN p.PRIMARY_BLOCKER END) as failures\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.POC_TRACKER p\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON p.OPP_ID = o.OPP_ID\nGROUP BY\n  o.CUSTOMER_TYPE, deal_size_band\nORDER BY\n  poc_success_pct DESC;"
  },
  {
      "question": "What are the primary blockers causing POC failures by customer segment?",
      "sql": "SELECT \n  o.CUSTOMER_TYPE,\n  p.PRIMARY_BLOCKER,\n  COUNT(*) as blocker_count,\n  ROUND(COUNT(*) * 100.0 / SUM(COUNT(*)) OVER(PARTITION BY o.CUSTOMER_TYPE), 2) as pct_of_failures,\n  AVG(p.DURATION_DAYS) as avg_failed_poc_days\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.POC_TRACKER p\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON p.OPP_ID = o.OPP_ID\nWHERE\n  p.SUCCESS_FLAG = 0\nGROUP BY\n  o.CUSTOMER_TYPE, p.PRIMARY_BLOCKER\nORDER BY\n  o.CUSTOMER_TYPE, blocker_count DESC;"
  },
  {
      "question": "What are our average discount rates by product bundle and customer type, and how do they compare to the 6% mature benchmark?",
      "sql": "SELECT \n  o.CUSTOMER_TYPE,\n  q.PRODUCT_BUNDLE_CODE,\n  COUNT(*) as quote_count,\n  AVG(q.DISCOUNT_PCT) as avg_discount_pct,\n  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY q.DISCOUNT_PCT) as median_discount,\n  COUNT(CASE WHEN o.STATUS = 'Won' THEN 1 END) as won_deals,\n  ROUND(COUNT(CASE WHEN o.STATUS = 'Won' THEN 1 END) * 100.0 / COUNT(*), 2) as win_rate_pct,\n  CASE \n    WHEN AVG(q.DISCOUNT_PCT) <= 6 THEN 'Mature Pricing'\n    WHEN AVG(q.DISCOUNT_PCT) <= 12 THEN 'Developing'\n    ELSE 'Immature Pricing'\n  END as pricing_maturity\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.QUOTES q\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON q.OPP_ID = o.OPP_ID\nWHERE\n  o.STATUS IN ('Won', 'Lost')\nGROUP BY\n  o.CUSTOMER_TYPE, q.PRODUCT_BUNDLE_CODE\nORDER BY\n  avg_discount_pct ASC;"
  },
  {
      "question": "How do different contract term lengths affect our quote-to-close rates and pricing power?",
      "sql": "SELECT \n  q.TERM_MONTHS,\n  COUNT(DISTINCT q.OPP_ID) as opportunities_quoted,\n  COUNT(CASE WHEN o.STATUS = 'Won' THEN 1 END) as won_deals,\n  ROUND(COUNT(CASE WHEN o.STATUS = 'Won' THEN 1 END) * 100.0 / COUNT(DISTINCT q.OPP_ID), 2) as quote_to_close_pct,\n  AVG(CASE WHEN o.STATUS = 'Won' THEN q.DISCOUNT_PCT END) as won_avg_discount,\n  AVG(CASE WHEN o.STATUS = 'Won' THEN o.AMOUNT END) as won_avg_deal_size\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.QUOTES q\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON q.OPP_ID = o.OPP_ID\nWHERE\n  o.STATUS IN ('Won', 'Lost')\nGROUP BY\n  q.TERM_MONTHS\nORDER BY\n  quote_to_close_pct DESC;"
  },
  {
      "question": "Which vertical and customer segment combinations have the most mature end-to-end sales motions?",
      "sql": "WITH funnel_metrics AS (\n  SELECT \n    o.CUSTOMER_TYPE,\n    CASE \n      WHEN q.PRODUCT_BUNDLE_CODE LIKE 'HEALTH%' THEN 'Healthcare'\n      WHEN q.PRODUCT_BUNDLE_CODE LIKE 'EDU%' THEN 'Education'\n      ELSE 'General'\n    END as vertical,\n    COUNT(DISTINCT l.LEAD_ID) as total_leads,\n    COUNT(DISTINCT CASE WHEN l.SQL_DATE IS NOT NULL THEN l.LEAD_ID END) as sqls,\n    COUNT(DISTINCT p.POC_ID) as pocs_run,\n    COUNT(DISTINCT CASE WHEN p.SUCCESS_FLAG = 1 THEN p.POC_ID END) as successful_pocs,\n    COUNT(DISTINCT CASE WHEN o.STATUS = 'Won' THEN o.OPP_ID END) as won_deals,\n    AVG(CASE WHEN o.STATUS = 'Won' THEN q.DISCOUNT_PCT END) as avg_won_discount\n  FROM\n    DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o\n  LEFT JOIN\n    DEMO_V4.CORRELATED_SCHEMA.LEADS l ON o.CUSTOMER_ID = l.CUSTOMER_ID\n  LEFT JOIN\n    DEMO_V4.CORRELATED_SCHEMA.POC_TRACKER p ON o.OPP_ID = p.OPP_ID\n  LEFT JOIN\n    DEMO_V4.CORRELATED_SCHEMA.QUOTES q ON o.OPP_ID = q.OPP_ID\n  WHERE\n    o.STATUS IN ('Won', 'Lost')\n  GROUP BY\n    o.CUSTOMER_TYPE, vertical\n)\nSELECT \n  CUSTOMER_TYPE,\n  vertical,\n  ROUND(sqls * 100.0 / NULLIF(total_leads, 0), 2) as lead_to_sql_pct,\n  ROUND(successful_pocs * 100.0 / NULLIF(pocs_run, 0), 2) as poc_success_pct,\n  ROUND(won_deals * 100.0 / NULLIF(sqls, 0), 2) as sql_to_close_pct,\n  ROUND(avg_won_discount, 2) as avg_discount_pct,\n  CASE \n    WHEN sqls * 100.0 / NULLIF(total_leads, 0) >= 12 \n     AND successful_pocs * 100.0 / NULLIF(pocs_run, 0) >= 75 \n     AND avg_won_discount <= 6 THEN 'Mature Motion'\n    ELSE 'Immature Motion'\n  END as motion_maturity\nFROM\n  funnel_metrics\nORDER BY\n  motion_maturity DESC, lead_to_sql_pct DESC;"
  },
  {
      "question": "Should we refine our customer segmentation based on deal size distribution patterns?",
      "sql": "SELECT \n  CUSTOMER_TYPE,\n  COUNT(*) as deal_count,\n  MIN(AMOUNT) as min_deal_size,\n  PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY AMOUNT) as q1_deal_size,\n  PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY AMOUNT) as median_deal_size,\n  PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY AMOUNT) as q3_deal_size,\n  MAX(AMOUNT) as max_deal_size,\n  AVG(AMOUNT) as avg_deal_size,\n  STDDEV(AMOUNT) as deal_size_stddev,\n  CASE \n    WHEN STDDEV(AMOUNT) / AVG(AMOUNT) > 0.5 THEN 'High Variance - Consider Sub-Segments'\n    ELSE 'Appropriate Segmentation'\n  END as segmentation_recommendation\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES \nWHERE\n  STATUS = 'Won' AND AMOUNT > 0\nGROUP BY\n  CUSTOMER_TYPE\nORDER BY\n  avg_deal_size DESC;"
  },
  {
      "question": "How do our key sales motion metrics compare to industry maturity benchmarks?",
      "sql": "SELECT \n  'Early Funnel - MQL to SQL' as metric_category,\n  ROUND(COUNT(l.SQL_DATE) * 100.0 / COUNT(l.MQL_DATE), 2) as current_performance,\n  12.0 as mature_benchmark,\n  ROUND((COUNT(l.SQL_DATE) * 100.0 / COUNT(l.MQL_DATE)) - 12.0, 2) as gap_to_benchmark,\n  CASE \n    WHEN COUNT(l.SQL_DATE) * 100.0 / COUNT(l.MQL_DATE) >= 12 THEN 'At Benchmark'\n    WHEN COUNT(l.SQL_DATE) * 100.0 / COUNT(l.MQL_DATE) >= 8 THEN 'Moderate Gap'\n    ELSE 'Critical Gap'\n  END as priority_level\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.LEADS l\nWHERE\n  l.MQL_DATE IS NOT NULL\n\nUNION ALL\n\nSELECT \n  'Mid Funnel - POC Success Rate',\n  ROUND(AVG(SUCCESS_FLAG) * 100, 2),\n  75.0,\n  ROUND((AVG(SUCCESS_FLAG) * 100) - 75.0, 2),\n  CASE \n    WHEN AVG(SUCCESS_FLAG) * 100 >= 75 THEN 'At Benchmark'\n    WHEN AVG(SUCCESS_FLAG) * 100 >= 60 THEN 'Moderate Gap'\n    ELSE 'Critical Gap'\n  END\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.POC_TRACKER\n\nUNION ALL\n\nSELECT \n  'Late Funnel - Average Discount',\n  ROUND(AVG(q.DISCOUNT_PCT), 2),\n  6.0,\n  ROUND(AVG(q.DISCOUNT_PCT) - 6.0, 2),\n  CASE \n    WHEN AVG(q.DISCOUNT_PCT) <= 6 THEN 'At Benchmark'\n    WHEN AVG(q.DISCOUNT_PCT) <= 12 THEN 'Moderate Gap'\n    ELSE 'Critical Gap'\n  END\nFROM\n  DEMO_V4.CORRELATED_SCHEMA.QUOTES q\nJOIN\n  DEMO_V4.CORRELATED_SCHEMA.OPPORTUNITIES o ON q.OPP_ID = o.OPP_ID\nWHERE\n  o.STATUS = 'Won'\n\nORDER BY \n  CASE priority_level \n    WHEN 'Critical Gap' THEN 1 \n    WHEN 'Moderate Gap' THEN 2 \n    ELSE 3 \n  END;"
  }
]